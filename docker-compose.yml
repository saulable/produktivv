version: '3.2'
services:
  traefik:
    image: traefik:1.7.2-alpine
    networks:
      - web
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    command:
      - "--docker"
      - "--docker.domain=docker.localhost"
      - "--docker.watch"
      - "--logLevel=DEBUG"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.dev.toml:/traefik.toml
      - ./traefik/certs/:/certs/
    depends_on:
      - api
      - client
      - oauthflow
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    image: produktivv_server
    networks:
      - web
    volumes:
      - /app/node_modules
      - ./server:/app
    ports:
      - '5000'
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.backend=api"
      - "traefik.port=5000"
      - "traefik.frontend.rule=Host:localhost; PathPrefix:/api"
      - "traefik.frontend.passHostHeader=true"
  oauthflow:
    build:
      dockerfile: Dockerfile.dev
      context: ./oauthflow
    image: produktivv_server_oauthflow
    networks:
      - web
    volumes:
      - /app/node_modules
      - ./oauthflow:/app
    ports:
      - '5050'
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.backend=oauthflow"
      - "traefik.port=5050"
      - "traefik.frontend.rule=Host:localhost; PathPrefix:/auth"
      - "traefik.frontend.passHostHeader=true"
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    image: produktivv_client
    networks:
      - web
    volumes:
      - /app/node_modules
      - ./client:/app
    ports:
      - '3000'
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.backend=client"
      - "traefik.frontend.rule=Host:localhost"
networks:
  web:
    external: true
